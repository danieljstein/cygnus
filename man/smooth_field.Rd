% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_gradients.R
\name{smooth_field}
\alias{smooth_field}
\title{Bilateral / anisotropic filtering of gradient field}
\usage{
smooth_field(
  coords,
  field,
  adj,
  include_self = TRUE,
  distance = "euclidean",
  similarity = "euclidean"
)
}
\arguments{
\item{coords}{A \code{N} x \code{2} matrix of cell coordinates.}

\item{field}{A \code{2} x \code{D} x \code{N} array in column-major ordering
containing the spatial gradient in expression for each of
\code{D} latent variables at every point in space.}

\item{adj}{A \code{N} x \code{N} sparse adjacency matrix
in dgCMatrix format.}

\item{include_self}{A boolean whether or not to include the
each point's gradient in its own smoothed value. Defaults to TRUE.}

\item{distance}{Method for computing distance score in weighted average.
See description for details. Defaults to \code{'euclidean'}.}

\item{similarity}{Method for computing similarity score in weighted average.
See description for details. Defaults to \code{'euclidean'}.}
}
\value{
A \code{2} x \code{D} x \code{N} array in column-major ordering
containing the smoothed spatial gradient in expression for each of
\code{D} latent variables at every point in space.
}
\description{
Gradient fields are smoothed using bilateral filtering,
in which the smoothed gradient of each point is computed as
the weighted average of the neighbors' gradients, considering
both distance in space and also similarity in gradients.
}
\details{
The weight of each neighbor is computed from the product of two scores:
\itemize{
\item \code{distance} score: Generally, closer neighbors have greater weight.
\itemize{
\item if \code{'euclidean'}: Gaussian transformation of the Euclidean distance
of a cell from its neighbor, so that more distant neighbors have less weight.
\item if \code{'projected'}: An anisotropic filter that accounts for expected
change in expression along the direction of the neighbor. The expected
change in expression is calculated from the gradient field as the total
derivative in the direction of the neighbor. This change in expression is
then Gaussian transformed so that neighbors that are more distant along the
direction of greatest change have less weight.
\item if \code{'constant'}: All neighbors have equal \code{distance} weights
}
\item \code{similarity} score: Generally, neighbors with more similar gradients have
greater weight
\itemize{
\item if \code{'euclidean'}: Gaussian transformation of the Euclidean distance
between a cell's gradient field and its neighbor's gradient field.
\item if \code{'projected'}: Gaussian transformation of the cosine distance
between a cell's gradient field and its neighbor's gradient field.
\item if \code{'constant'}: All neighbors have equal \code{similarity} weights
}
}
}
