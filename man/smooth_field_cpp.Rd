% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{smooth_field_cpp}
\alias{smooth_field_cpp}
\title{Bilateral / anisotropic filtering of gradient field}
\usage{
smooth_field_cpp(pvec, adj_i, adj_p, field, coords, distance, similarity)
}
\arguments{
\item{pvec, adj_i, adj_p}{A \code{N} x \code{N} sparse adjacency matrix
in dgCMatrix format: \code{pvec = diff(adj@p)}, \code{adj_i = adj@i},
and \code{adj_p = adj@p}}

\item{field}{A \code{2} x \code{D} x \code{N} array in column-major ordering
containing the spatial gradient in expression for each of
\code{D} latent variables at every point in space.}

\item{coords}{A \code{N} x \code{2} matrix of cell coordinates.}

\item{distance}{Method for computing distance score in weighted average.
See description for details. Defaults to \code{'euclidean'}.}

\item{similarity}{Method for computing similarity score in weighted average.
See description for details. Defaults to \code{'euclidean'}.}
}
\value{
A \code{2} x \code{D} x \code{N} array in column-major ordering
containing the smoothed spatial gradient in expression for each of
\code{D} latent variables at every point in space.
}
\description{
Gradient fields are smoothed using bilateral filtering,
in which the smoothed gradient of each point is computed as
the weighted average of the neighbors' gradients, considering
both distance in space and also similarity in gradients.
}
